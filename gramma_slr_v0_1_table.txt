============================================================
GOLD Parser Builder
Version 5.2.0.
============================================================


========================================
Terminals
========================================

0       (EOF)
 1      (Error)
 2      Whitespace
 3      ''
 4      '-'
 5      '!='
 6      '%'
 7      '('
 8      ')'
 9      '*'
 10     ','
 11     '/'
 12     ';'
 13     '{'
 14     '}'
 15     '+'
 16     '<'
 17     '='
 18     '=='
 19     '>'
 20     and
 21     else
 22     function
 23     Identifier
 24     if
 25     loop
 26     num
 27     or
 28     return


========================================
Nonterminals
========================================

29      <ap>
30      <ar>
31      <attr>
32      <com>
33      <cond>
34      <e>
35      <f>
36      <function>
37      <id>
38      <lib>
39      <loop>
40      <opl>
41      <param>
42      <stm>
43      <stm_>
44      <t>


========================================
Rules
========================================

0       <id> ::= Identifier
1       <ar> ::= '+'
2       <ar> ::= '-'
3       <ar> ::= or
4       <ap> ::= '*'
5       <ap> ::= '/'
6       <ap> ::= '%'
7       <ap> ::= and
8       <e> ::= <e> <ar> <t>
9       <e> ::= <t>
10      <t> ::= <t> <ap> <f>
11      <t> ::= <f>
12      <f> ::= '(' <e> ')'
13      <f> ::= <id>
14      <f> ::= num
15      <opl> ::= <e> '!=' <e>
16      <opl> ::= <e> '==' <e>
17      <opl> ::= <e> '<' <e>
18      <opl> ::= <e> '>' <e>
19      <cond> ::= if <opl> <stm> else <stm>
20      <attr> ::= <id> '=' <e>
21      <attr> ::= <id> '=' <opl>
22      <loop> ::= loop '(' <opl> ')' <stm>
23      <loop> ::= loop <stm> '(' <opl> ')'
24      <com> ::= <loop>
25      <com> ::= <cond>
26      <com> ::= <attr> ';'
27      <com> ::= <function>
28      <lib> ::= <stm> <lib>
29      <lib> ::= <stm>
30      <lib> ::= ''
31      <stm> ::= '{' <stm_>
32      <stm> ::= <com>
33      <stm> ::= return <opl> ';'
34      <stm> ::= return <e> ';'
35      <stm_> ::= <com> <stm_>
36      <stm_> ::= '}'
37      <stm_> ::= return <opl> ';' '}'
38      <stm_> ::= return <e> ';' '}'
39      <function> ::= function <id> '(' <param> <stm>
40      <param> ::= <id> ')'
41      <param> ::= ')'
42      <param> ::= <id> ',' <param>


========================================
DFA States
========================================

State 0
        Goto 1       &09 .. &0D, &20, &85, &A0, &1680, &180E, &2000 .. &200A, &2026, &2028, &2029, &202F, &205F, &3000
        Goto 2       '
        Goto 3       !
        Goto 5       %
        Goto 6       (
        Goto 7       )
        Goto 8       *
        Goto 9       ,
        Goto 10      /
        Goto 11      ;
        Goto 12      {
        Goto 13      }
        Goto 14      +
        Goto 15      <
        Goto 16      >
        Goto 17      BCDGHJKMNPQSTUVWXYZbcdghjkmnpqstuvwxyz
        Goto 19      0123456789
        Goto 20      -
        Goto 22      =
        Goto 24      Aa
        Goto 27      Ee
        Goto 31      Ff
        Goto 39      Ii
        Goto 41      Ll
        Goto 45      Oo
        Goto 47      Rr


State 1
        Goto 1       &09 .. &0D, &20, &85, &A0, &1680, &180E, &2000 .. &200A, &2026, &2028, &2029, &202F, &205F, &3000
        Accept Whitespace


State 2
        Accept ''


State 3
        Goto 4       =


State 4
        Accept '!='


State 5
        Accept '%'


State 6
        Accept '('


State 7
        Accept ')'


State 8
        Accept '*'


State 9
        Accept ','


State 10
        Accept '/'


State 11
        Accept ';'


State 12
        Accept '{'


State 13
        Accept '}'


State 14
        Accept '+'


State 15
        Accept '<'


State 16
        Accept '>'


State 17
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        Accept Identifier


State 18
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        Accept Identifier


State 19
        Goto 19      0123456789
        Accept num


State 20
        Goto 21      0123456789
        Accept '-'


State 21
        Goto 21      0123456789
        Accept num


State 22
        Goto 23      =
        Accept '='


State 23
        Accept '=='


State 24
        Goto 18      0123456789ABCDEFGHIJKLMOPQRSTUVWXYZabcdefghijklmopqrstuvwxyz
        Goto 25      Nn
        Accept Identifier


State 25
        Goto 18      0123456789ABCEFGHIJKLMNOPQRSTUVWXYZabcefghijklmnopqrstuvwxyz
        Goto 26      Dd
        Accept Identifier


State 26
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        Accept and


State 27
        Goto 18      0123456789ABCDEFGHIJKMNOPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz
        Goto 28      Ll
        Accept Identifier


State 28
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRTUVWXYZabcdefghijklmnopqrtuvwxyz
        Goto 29      Ss
        Accept Identifier


State 29
        Goto 18      0123456789ABCDFGHIJKLMNOPQRSTUVWXYZabcdfghijklmnopqrstuvwxyz
        Goto 30      Ee
        Accept Identifier


State 30
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        Accept else


State 31
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTVWXYZabcdefghijklmnopqrstvwxyz
        Goto 32      Uu
        Accept Identifier


State 32
        Goto 18      0123456789ABCDEFGHIJKLMOPQRSTUVWXYZabcdefghijklmopqrstuvwxyz
        Goto 33      Nn
        Accept Identifier


State 33
        Goto 18      0123456789ABDEFGHIJKLMNOPQRSTUVWXYZabdefghijklmnopqrstuvwxyz
        Goto 34      Cc
        Accept Identifier


State 34
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSUVWXYZabcdefghijklmnopqrsuvwxyz
        Goto 35      Tt
        Accept Identifier


State 35
        Goto 18      0123456789ABCDEFGHJKLMNOPQRSTUVWXYZabcdefghjklmnopqrstuvwxyz
        Goto 36      Ii
        Accept Identifier


State 36
        Goto 18      0123456789ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz
        Goto 37      Oo
        Accept Identifier


State 37
        Goto 18      0123456789ABCDEFGHIJKLMOPQRSTUVWXYZabcdefghijklmopqrstuvwxyz
        Goto 38      Nn
        Accept Identifier


State 38
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        Accept function


State 39
        Goto 18      0123456789ABCDEGHIJKLMNOPQRSTUVWXYZabcdeghijklmnopqrstuvwxyz
        Goto 40      Ff
        Accept Identifier


State 40
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        Accept if


State 41
        Goto 18      0123456789ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz
        Goto 42      Oo
        Accept Identifier


State 42
        Goto 18      0123456789ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz
        Goto 43      Oo
        Accept Identifier


State 43
        Goto 18      0123456789ABCDEFGHIJKLMNOQRSTUVWXYZabcdefghijklmnoqrstuvwxyz
        Goto 44      Pp
        Accept Identifier


State 44
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        Accept loop


State 45
        Goto 18      0123456789ABCDEFGHIJKLMNOPQSTUVWXYZabcdefghijklmnopqstuvwxyz
        Goto 46      Rr
        Accept Identifier


State 46
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        Accept or


State 47
        Goto 18      0123456789ABCDFGHIJKLMNOPQRSTUVWXYZabcdfghijklmnopqrstuvwxyz
        Goto 48      Ee
        Accept Identifier


State 48
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSUVWXYZabcdefghijklmnopqrsuvwxyz
        Goto 49      Tt
        Accept Identifier


State 49
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTVWXYZabcdefghijklmnopqrstvwxyz
        Goto 50      Uu
        Accept Identifier


State 50
        Goto 18      0123456789ABCDEFGHIJKLMNOPQSTUVWXYZabcdefghijklmnopqstuvwxyz
        Goto 51      Rr
        Accept Identifier


State 51
        Goto 18      0123456789ABCDEFGHIJKLMOPQRSTUVWXYZabcdefghijklmopqrstuvwxyz
        Goto 52      Nn
        Accept Identifier


State 52
        Goto 18      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        Accept return




========================================
LALR States
========================================

State 0
        <S'> ::= _ <lib> (EOF)                                  <S'> ::= ^ <lib> (EOF)
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <cond> ::= _ if <opl> <stm> else <stm>                  <cond> ::= ^ if <opl> <stm> else <stm>
        <attr> ::= _ <id> '=' <e>                               <attr> ::= ^ <id> '=' <e>
        <attr> ::= _ <id> '=' <opl>                             <attr> ::= ^ <id> '=' <opl>
        <loop> ::= _ loop '(' <opl> ')' <stm>                   <loop> ::= ^ loop '(' <opl> ')' <stm>
        <loop> ::= _ loop <stm> '(' <opl> ')'                   <loop> ::= ^ loop <stm> '(' <opl> ')'
        <com> ::= _ <loop>                                      <com> ::= ^ <loop>
        <com> ::= _ <cond>                                      <com> ::= ^ <cond>
        <com> ::= _ <attr> ';'                                  <com> ::= ^ <attr> ';'
        <com> ::= _ <function>                                  <com> ::= ^ <function>
        <lib> ::= _ <stm> <lib>                                 <lib> ::= ^ <stm> <lib>
        <lib> ::= _ <stm>                                       <lib> ::= ^ <stm>
        <lib> ::= _ ''                                          <lib> ::= ^ ''
        <stm> ::= _ '{' <stm_>                                  <stm> ::= ^ '{' <stm_>
        <stm> ::= _ <com>                                       <stm> ::= ^ <com>
        <stm> ::= _ return <opl> ';'                            <stm> ::= ^ return <opl> ';'
        <stm> ::= _ return <e> ';'                              <stm> ::= ^ return <e> ';'
        <function> ::= _ function <id> '(' <param> <stm>        <function> ::= ^ function <id> '(' <param> <stm>

        '' s 1
        '{' s 2
        function s 3
        Identifier s 4
        if s 5
        loop s 6
        return s 7
        <attr> g 8
        <com> g 9
        <cond> g 10
        <function> g 11
        <id> g 12
        <lib> g 13
        <loop> g 14
        <stm> g 15


State 1
        Prior States: 0, 15

        <lib> ::= '' _                                          <lib> ::= '' ^

        (EOF) r 30


State 2
        Prior States: 0, 6, 15, 26, 64, 71, 73

        <stm> ::= '{' _ <stm_>                                  <stm> ::= '{' ^ <stm_>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <cond> ::= _ if <opl> <stm> else <stm>                  <cond> ::= ^ if <opl> <stm> else <stm>
        <attr> ::= _ <id> '=' <e>                               <attr> ::= ^ <id> '=' <e>
        <attr> ::= _ <id> '=' <opl>                             <attr> ::= ^ <id> '=' <opl>
        <loop> ::= _ loop '(' <opl> ')' <stm>                   <loop> ::= ^ loop '(' <opl> ')' <stm>
        <loop> ::= _ loop <stm> '(' <opl> ')'                   <loop> ::= ^ loop <stm> '(' <opl> ')'
        <com> ::= _ <loop>                                      <com> ::= ^ <loop>
        <com> ::= _ <cond>                                      <com> ::= ^ <cond>
        <com> ::= _ <attr> ';'                                  <com> ::= ^ <attr> ';'
        <com> ::= _ <function>                                  <com> ::= ^ <function>
        <stm_> ::= _ <com> <stm_>                               <stm_> ::= ^ <com> <stm_>
        <stm_> ::= _ '}'                                        <stm_> ::= ^ '}'
        <stm_> ::= _ return <opl> ';' '}'                       <stm_> ::= ^ return <opl> ';' '}'
        <stm_> ::= _ return <e> ';' '}'                         <stm_> ::= ^ return <e> ';' '}'
        <function> ::= _ function <id> '(' <param> <stm>        <function> ::= ^ function <id> '(' <param> <stm>

        '}' s 16
        function s 3
        Identifier s 4
        if s 5
        loop s 6
        return s 17
        <attr> g 8
        <com> g 18
        <cond> g 10
        <function> g 11
        <id> g 12
        <loop> g 14
        <stm_> g 19


State 3
        Prior States: 0, 2, 6, 15, 18, 26, 64, 71, 73

        <function> ::= function _ <id> '(' <param> <stm>        <function> ::= function ^ <id> '(' <param> <stm>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier

        Identifier s 4
        <id> g 20


State 4
        Prior States: 0, 2, 3, 5, 6, 7, 15, 17, 18, 21, 26, 28, 33, 38, 41, 43, 44, 45, 47, 53, 55, 64, 71, 73, 78

        <id> ::= Identifier _                                   <id> ::= Identifier ^

        '-' r 0
        '!=' r 0
        '%' r 0
        '(' r 0
        ')' r 0
        '*' r 0
        ',' r 0
        '/' r 0
        ';' r 0
        '{' r 0
        '+' r 0
        '<' r 0
        '=' r 0
        '==' r 0
        '>' r 0
        and r 0
        function r 0
        Identifier r 0
        if r 0
        loop r 0
        or r 0
        return r 0


State 5
        Prior States: 0, 2, 6, 15, 18, 26, 64, 71, 73

        <cond> ::= if _ <opl> <stm> else <stm>                  <cond> ::= if ^ <opl> <stm> else <stm>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num
        <opl> ::= _ <e> '!=' <e>                                <opl> ::= ^ <e> '!=' <e>
        <opl> ::= _ <e> '==' <e>                                <opl> ::= ^ <e> '==' <e>
        <opl> ::= _ <e> '<' <e>                                 <opl> ::= ^ <e> '<' <e>
        <opl> ::= _ <e> '>' <e>                                 <opl> ::= ^ <e> '>' <e>

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 23
        <f> g 24
        <id> g 25
        <opl> g 26
        <t> g 27


State 6
        Prior States: 0, 2, 6, 15, 18, 26, 64, 71, 73

        <loop> ::= loop _ '(' <opl> ')' <stm>                   <loop> ::= loop ^ '(' <opl> ')' <stm>
        <loop> ::= loop _ <stm> '(' <opl> ')'                   <loop> ::= loop ^ <stm> '(' <opl> ')'
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <cond> ::= _ if <opl> <stm> else <stm>                  <cond> ::= ^ if <opl> <stm> else <stm>
        <attr> ::= _ <id> '=' <e>                               <attr> ::= ^ <id> '=' <e>
        <attr> ::= _ <id> '=' <opl>                             <attr> ::= ^ <id> '=' <opl>
        <loop> ::= _ loop '(' <opl> ')' <stm>                   <loop> ::= ^ loop '(' <opl> ')' <stm>
        <loop> ::= _ loop <stm> '(' <opl> ')'                   <loop> ::= ^ loop <stm> '(' <opl> ')'
        <com> ::= _ <loop>                                      <com> ::= ^ <loop>
        <com> ::= _ <cond>                                      <com> ::= ^ <cond>
        <com> ::= _ <attr> ';'                                  <com> ::= ^ <attr> ';'
        <com> ::= _ <function>                                  <com> ::= ^ <function>
        <stm> ::= _ '{' <stm_>                                  <stm> ::= ^ '{' <stm_>
        <stm> ::= _ <com>                                       <stm> ::= ^ <com>
        <stm> ::= _ return <opl> ';'                            <stm> ::= ^ return <opl> ';'
        <stm> ::= _ return <e> ';'                              <stm> ::= ^ return <e> ';'
        <function> ::= _ function <id> '(' <param> <stm>        <function> ::= ^ function <id> '(' <param> <stm>

        '(' s 28
        '{' s 2
        function s 3
        Identifier s 4
        if s 5
        loop s 6
        return s 7
        <attr> g 8
        <com> g 9
        <cond> g 10
        <function> g 11
        <id> g 12
        <loop> g 14
        <stm> g 29


State 7
        Prior States: 0, 6, 15, 26, 64, 71, 73

        <stm> ::= return _ <opl> ';'                            <stm> ::= return ^ <opl> ';'
        <stm> ::= return _ <e> ';'                              <stm> ::= return ^ <e> ';'
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num
        <opl> ::= _ <e> '!=' <e>                                <opl> ::= ^ <e> '!=' <e>
        <opl> ::= _ <e> '==' <e>                                <opl> ::= ^ <e> '==' <e>
        <opl> ::= _ <e> '<' <e>                                 <opl> ::= ^ <e> '<' <e>
        <opl> ::= _ <e> '>' <e>                                 <opl> ::= ^ <e> '>' <e>

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 30
        <f> g 24
        <id> g 25
        <opl> g 31
        <t> g 27


State 8
        Prior States: 0, 2, 6, 15, 18, 26, 64, 71, 73

        <com> ::= <attr> _ ';'                                  <com> ::= <attr> ^ ';'

        ';' s 32


State 9
        Prior States: 0, 6, 15, 26, 64, 71, 73

        <stm> ::= <com> _                                       <stm> ::= <com> ^

        (EOF) r 32
        '' r 32
        '(' r 32
        '{' r 32
        '}' r 32
        else r 32
        function r 32
        Identifier r 32
        if r 32
        loop r 32
        return r 32


State 10
        Prior States: 0, 2, 6, 15, 18, 26, 64, 71, 73

        <com> ::= <cond> _                                      <com> ::= <cond> ^

        (EOF) r 25
        '' r 25
        '(' r 25
        '{' r 25
        '}' r 25
        else r 25
        function r 25
        Identifier r 25
        if r 25
        loop r 25
        return r 25


State 11
        Prior States: 0, 2, 6, 15, 18, 26, 64, 71, 73

        <com> ::= <function> _                                  <com> ::= <function> ^

        (EOF) r 27
        '' r 27
        '(' r 27
        '{' r 27
        '}' r 27
        else r 27
        function r 27
        Identifier r 27
        if r 27
        loop r 27
        return r 27


State 12
        Prior States: 0, 2, 6, 15, 18, 26, 64, 71, 73

        <attr> ::= <id> _ '=' <e>                               <attr> ::= <id> ^ '=' <e>
        <attr> ::= <id> _ '=' <opl>                             <attr> ::= <id> ^ '=' <opl>

        '=' s 33


State 13
        Prior States: 0

        <S'> ::= <lib> _ (EOF)                                  <S'> ::= <lib> ^ (EOF)

        (EOF) a


State 14
        Prior States: 0, 2, 6, 15, 18, 26, 64, 71, 73

        <com> ::= <loop> _                                      <com> ::= <loop> ^

        (EOF) r 24
        '' r 24
        '(' r 24
        '{' r 24
        '}' r 24
        else r 24
        function r 24
        Identifier r 24
        if r 24
        loop r 24
        return r 24


State 15
        Prior States: 0, 15

        <lib> ::= <stm> _ <lib>                                 <lib> ::= <stm> ^ <lib>
        <lib> ::= <stm> _                                       <lib> ::= <stm> ^
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <cond> ::= _ if <opl> <stm> else <stm>                  <cond> ::= ^ if <opl> <stm> else <stm>
        <attr> ::= _ <id> '=' <e>                               <attr> ::= ^ <id> '=' <e>
        <attr> ::= _ <id> '=' <opl>                             <attr> ::= ^ <id> '=' <opl>
        <loop> ::= _ loop '(' <opl> ')' <stm>                   <loop> ::= ^ loop '(' <opl> ')' <stm>
        <loop> ::= _ loop <stm> '(' <opl> ')'                   <loop> ::= ^ loop <stm> '(' <opl> ')'
        <com> ::= _ <loop>                                      <com> ::= ^ <loop>
        <com> ::= _ <cond>                                      <com> ::= ^ <cond>
        <com> ::= _ <attr> ';'                                  <com> ::= ^ <attr> ';'
        <com> ::= _ <function>                                  <com> ::= ^ <function>
        <lib> ::= _ <stm> <lib>                                 <lib> ::= ^ <stm> <lib>
        <lib> ::= _ <stm>                                       <lib> ::= ^ <stm>
        <lib> ::= _ ''                                          <lib> ::= ^ ''
        <stm> ::= _ '{' <stm_>                                  <stm> ::= ^ '{' <stm_>
        <stm> ::= _ <com>                                       <stm> ::= ^ <com>
        <stm> ::= _ return <opl> ';'                            <stm> ::= ^ return <opl> ';'
        <stm> ::= _ return <e> ';'                              <stm> ::= ^ return <e> ';'
        <function> ::= _ function <id> '(' <param> <stm>        <function> ::= ^ function <id> '(' <param> <stm>

        '' s 1
        '{' s 2
        function s 3
        Identifier s 4
        if s 5
        loop s 6
        return s 7
        <attr> g 8
        <com> g 9
        <cond> g 10
        <function> g 11
        <id> g 12
        <lib> g 34
        <loop> g 14
        <stm> g 15
        (EOF) r 29


State 16
        Prior States: 2, 18

        <stm_> ::= '}' _                                        <stm_> ::= '}' ^

        (EOF) r 36
        '' r 36
        '(' r 36
        '{' r 36
        '}' r 36
        else r 36
        function r 36
        Identifier r 36
        if r 36
        loop r 36
        return r 36


State 17
        Prior States: 2, 18

        <stm_> ::= return _ <opl> ';' '}'                       <stm_> ::= return ^ <opl> ';' '}'
        <stm_> ::= return _ <e> ';' '}'                         <stm_> ::= return ^ <e> ';' '}'
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num
        <opl> ::= _ <e> '!=' <e>                                <opl> ::= ^ <e> '!=' <e>
        <opl> ::= _ <e> '==' <e>                                <opl> ::= ^ <e> '==' <e>
        <opl> ::= _ <e> '<' <e>                                 <opl> ::= ^ <e> '<' <e>
        <opl> ::= _ <e> '>' <e>                                 <opl> ::= ^ <e> '>' <e>

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 35
        <f> g 24
        <id> g 25
        <opl> g 36
        <t> g 27


State 18
        Prior States: 2, 18

        <stm_> ::= <com> _ <stm_>                               <stm_> ::= <com> ^ <stm_>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <cond> ::= _ if <opl> <stm> else <stm>                  <cond> ::= ^ if <opl> <stm> else <stm>
        <attr> ::= _ <id> '=' <e>                               <attr> ::= ^ <id> '=' <e>
        <attr> ::= _ <id> '=' <opl>                             <attr> ::= ^ <id> '=' <opl>
        <loop> ::= _ loop '(' <opl> ')' <stm>                   <loop> ::= ^ loop '(' <opl> ')' <stm>
        <loop> ::= _ loop <stm> '(' <opl> ')'                   <loop> ::= ^ loop <stm> '(' <opl> ')'
        <com> ::= _ <loop>                                      <com> ::= ^ <loop>
        <com> ::= _ <cond>                                      <com> ::= ^ <cond>
        <com> ::= _ <attr> ';'                                  <com> ::= ^ <attr> ';'
        <com> ::= _ <function>                                  <com> ::= ^ <function>
        <stm_> ::= _ <com> <stm_>                               <stm_> ::= ^ <com> <stm_>
        <stm_> ::= _ '}'                                        <stm_> ::= ^ '}'
        <stm_> ::= _ return <opl> ';' '}'                       <stm_> ::= ^ return <opl> ';' '}'
        <stm_> ::= _ return <e> ';' '}'                         <stm_> ::= ^ return <e> ';' '}'
        <function> ::= _ function <id> '(' <param> <stm>        <function> ::= ^ function <id> '(' <param> <stm>

        '}' s 16
        function s 3
        Identifier s 4
        if s 5
        loop s 6
        return s 17
        <attr> g 8
        <com> g 18
        <cond> g 10
        <function> g 11
        <id> g 12
        <loop> g 14
        <stm_> g 37


State 19
        Prior States: 2

        <stm> ::= '{' <stm_> _                                  <stm> ::= '{' <stm_> ^

        (EOF) r 31
        '' r 31
        '(' r 31
        '{' r 31
        '}' r 31
        else r 31
        function r 31
        Identifier r 31
        if r 31
        loop r 31
        return r 31


State 20
        Prior States: 3

        <function> ::= function <id> _ '(' <param> <stm>        <function> ::= function <id> ^ '(' <param> <stm>

        '(' s 38


State 21
        Prior States: 5, 7, 17, 21, 28, 33, 41, 43, 44, 45, 47, 53, 55

        <f> ::= '(' _ <e> ')'                                   <f> ::= '(' ^ <e> ')'
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 39
        <f> g 24
        <id> g 25
        <t> g 27


State 22
        Prior States: 5, 7, 17, 21, 28, 33, 41, 43, 44, 45, 47, 53, 55

        <f> ::= num _                                           <f> ::= num ^

        '-' r 14
        '!=' r 14
        '%' r 14
        ')' r 14
        '*' r 14
        '/' r 14
        ';' r 14
        '{' r 14
        '+' r 14
        '<' r 14
        '==' r 14
        '>' r 14
        and r 14
        function r 14
        Identifier r 14
        if r 14
        loop r 14
        or r 14
        return r 14


State 23
        Prior States: 5, 28, 55

        <e> ::= <e> _ <ar> <t>                                  <e> ::= <e> ^ <ar> <t>
        <opl> ::= <e> _ '!=' <e>                                <opl> ::= <e> ^ '!=' <e>
        <opl> ::= <e> _ '==' <e>                                <opl> ::= <e> ^ '==' <e>
        <opl> ::= <e> _ '<' <e>                                 <opl> ::= <e> ^ '<' <e>
        <opl> ::= <e> _ '>' <e>                                 <opl> ::= <e> ^ '>' <e>
        <ar> ::= _ '+'                                          <ar> ::= ^ '+'
        <ar> ::= _ '-'                                          <ar> ::= ^ '-'
        <ar> ::= _ or                                           <ar> ::= ^ or

        '-' s 40
        '!=' s 41
        '+' s 42
        '<' s 43
        '==' s 44
        '>' s 45
        or s 46
        <ar> g 47


State 24
        Prior States: 5, 7, 17, 21, 28, 33, 41, 43, 44, 45, 47, 55

        <t> ::= <f> _                                           <t> ::= <f> ^

        '-' r 11
        '!=' r 11
        '%' r 11
        ')' r 11
        '*' r 11
        '/' r 11
        ';' r 11
        '{' r 11
        '+' r 11
        '<' r 11
        '==' r 11
        '>' r 11
        and r 11
        function r 11
        Identifier r 11
        if r 11
        loop r 11
        or r 11
        return r 11


State 25
        Prior States: 5, 7, 17, 21, 28, 33, 41, 43, 44, 45, 47, 53, 55

        <f> ::= <id> _                                          <f> ::= <id> ^

        '-' r 13
        '!=' r 13
        '%' r 13
        ')' r 13
        '*' r 13
        '/' r 13
        ';' r 13
        '{' r 13
        '+' r 13
        '<' r 13
        '==' r 13
        '>' r 13
        and r 13
        function r 13
        Identifier r 13
        if r 13
        loop r 13
        or r 13
        return r 13


State 26
        Prior States: 5

        <cond> ::= if <opl> _ <stm> else <stm>                  <cond> ::= if <opl> ^ <stm> else <stm>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <cond> ::= _ if <opl> <stm> else <stm>                  <cond> ::= ^ if <opl> <stm> else <stm>
        <attr> ::= _ <id> '=' <e>                               <attr> ::= ^ <id> '=' <e>
        <attr> ::= _ <id> '=' <opl>                             <attr> ::= ^ <id> '=' <opl>
        <loop> ::= _ loop '(' <opl> ')' <stm>                   <loop> ::= ^ loop '(' <opl> ')' <stm>
        <loop> ::= _ loop <stm> '(' <opl> ')'                   <loop> ::= ^ loop <stm> '(' <opl> ')'
        <com> ::= _ <loop>                                      <com> ::= ^ <loop>
        <com> ::= _ <cond>                                      <com> ::= ^ <cond>
        <com> ::= _ <attr> ';'                                  <com> ::= ^ <attr> ';'
        <com> ::= _ <function>                                  <com> ::= ^ <function>
        <stm> ::= _ '{' <stm_>                                  <stm> ::= ^ '{' <stm_>
        <stm> ::= _ <com>                                       <stm> ::= ^ <com>
        <stm> ::= _ return <opl> ';'                            <stm> ::= ^ return <opl> ';'
        <stm> ::= _ return <e> ';'                              <stm> ::= ^ return <e> ';'
        <function> ::= _ function <id> '(' <param> <stm>        <function> ::= ^ function <id> '(' <param> <stm>

        '{' s 2
        function s 3
        Identifier s 4
        if s 5
        loop s 6
        return s 7
        <attr> g 8
        <com> g 9
        <cond> g 10
        <function> g 11
        <id> g 12
        <loop> g 14
        <stm> g 48


State 27
        Prior States: 5, 7, 17, 21, 28, 33, 41, 43, 44, 45, 55

        <e> ::= <t> _                                           <e> ::= <t> ^
        <t> ::= <t> _ <ap> <f>                                  <t> ::= <t> ^ <ap> <f>
        <ap> ::= _ '*'                                          <ap> ::= ^ '*'
        <ap> ::= _ '/'                                          <ap> ::= ^ '/'
        <ap> ::= _ '%'                                          <ap> ::= ^ '%'
        <ap> ::= _ and                                          <ap> ::= ^ and

        '%' s 49
        '*' s 50
        '/' s 51
        and s 52
        <ap> g 53
        '-' r 9
        '!=' r 9
        ')' r 9
        ';' r 9
        '{' r 9
        '+' r 9
        '<' r 9
        '==' r 9
        '>' r 9
        function r 9
        Identifier r 9
        if r 9
        loop r 9
        or r 9
        return r 9


State 28
        Prior States: 6

        <loop> ::= loop '(' _ <opl> ')' <stm>                   <loop> ::= loop '(' ^ <opl> ')' <stm>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num
        <opl> ::= _ <e> '!=' <e>                                <opl> ::= ^ <e> '!=' <e>
        <opl> ::= _ <e> '==' <e>                                <opl> ::= ^ <e> '==' <e>
        <opl> ::= _ <e> '<' <e>                                 <opl> ::= ^ <e> '<' <e>
        <opl> ::= _ <e> '>' <e>                                 <opl> ::= ^ <e> '>' <e>

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 23
        <f> g 24
        <id> g 25
        <opl> g 54
        <t> g 27


State 29
        Prior States: 6

        <loop> ::= loop <stm> _ '(' <opl> ')'                   <loop> ::= loop <stm> ^ '(' <opl> ')'

        '(' s 55


State 30
        Prior States: 7

        <stm> ::= return <e> _ ';'                              <stm> ::= return <e> ^ ';'
        <e> ::= <e> _ <ar> <t>                                  <e> ::= <e> ^ <ar> <t>
        <opl> ::= <e> _ '!=' <e>                                <opl> ::= <e> ^ '!=' <e>
        <opl> ::= <e> _ '==' <e>                                <opl> ::= <e> ^ '==' <e>
        <opl> ::= <e> _ '<' <e>                                 <opl> ::= <e> ^ '<' <e>
        <opl> ::= <e> _ '>' <e>                                 <opl> ::= <e> ^ '>' <e>
        <ar> ::= _ '+'                                          <ar> ::= ^ '+'
        <ar> ::= _ '-'                                          <ar> ::= ^ '-'
        <ar> ::= _ or                                           <ar> ::= ^ or

        '-' s 40
        '!=' s 41
        ';' s 56
        '+' s 42
        '<' s 43
        '==' s 44
        '>' s 45
        or s 46
        <ar> g 47


State 31
        Prior States: 7

        <stm> ::= return <opl> _ ';'                            <stm> ::= return <opl> ^ ';'

        ';' s 57


State 32
        Prior States: 8

        <com> ::= <attr> ';' _                                  <com> ::= <attr> ';' ^

        (EOF) r 26
        '' r 26
        '(' r 26
        '{' r 26
        '}' r 26
        else r 26
        function r 26
        Identifier r 26
        if r 26
        loop r 26
        return r 26


State 33
        Prior States: 12

        <attr> ::= <id> '=' _ <e>                               <attr> ::= <id> '=' ^ <e>
        <attr> ::= <id> '=' _ <opl>                             <attr> ::= <id> '=' ^ <opl>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num
        <opl> ::= _ <e> '!=' <e>                                <opl> ::= ^ <e> '!=' <e>
        <opl> ::= _ <e> '==' <e>                                <opl> ::= ^ <e> '==' <e>
        <opl> ::= _ <e> '<' <e>                                 <opl> ::= ^ <e> '<' <e>
        <opl> ::= _ <e> '>' <e>                                 <opl> ::= ^ <e> '>' <e>

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 58
        <f> g 24
        <id> g 25
        <opl> g 59
        <t> g 27


State 34
        Prior States: 15

        <lib> ::= <stm> <lib> _                                 <lib> ::= <stm> <lib> ^

        (EOF) r 28


State 35
        Prior States: 17

        <stm_> ::= return <e> _ ';' '}'                         <stm_> ::= return <e> ^ ';' '}'
        <e> ::= <e> _ <ar> <t>                                  <e> ::= <e> ^ <ar> <t>
        <opl> ::= <e> _ '!=' <e>                                <opl> ::= <e> ^ '!=' <e>
        <opl> ::= <e> _ '==' <e>                                <opl> ::= <e> ^ '==' <e>
        <opl> ::= <e> _ '<' <e>                                 <opl> ::= <e> ^ '<' <e>
        <opl> ::= <e> _ '>' <e>                                 <opl> ::= <e> ^ '>' <e>
        <ar> ::= _ '+'                                          <ar> ::= ^ '+'
        <ar> ::= _ '-'                                          <ar> ::= ^ '-'
        <ar> ::= _ or                                           <ar> ::= ^ or

        '-' s 40
        '!=' s 41
        ';' s 60
        '+' s 42
        '<' s 43
        '==' s 44
        '>' s 45
        or s 46
        <ar> g 47


State 36
        Prior States: 17

        <stm_> ::= return <opl> _ ';' '}'                       <stm_> ::= return <opl> ^ ';' '}'

        ';' s 61


State 37
        Prior States: 18

        <stm_> ::= <com> <stm_> _                               <stm_> ::= <com> <stm_> ^

        (EOF) r 35
        '' r 35
        '(' r 35
        '{' r 35
        '}' r 35
        else r 35
        function r 35
        Identifier r 35
        if r 35
        loop r 35
        return r 35


State 38
        Prior States: 20

        <function> ::= function <id> '(' _ <param> <stm>        <function> ::= function <id> '(' ^ <param> <stm>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <param> ::= _ <id> ')'                                  <param> ::= ^ <id> ')'
        <param> ::= _ ')'                                       <param> ::= ^ ')'
        <param> ::= _ <id> ',' <param>                          <param> ::= ^ <id> ',' <param>

        ')' s 62
        Identifier s 4
        <id> g 63
        <param> g 64


State 39
        Prior States: 21

        <f> ::= '(' <e> _ ')'                                   <f> ::= '(' <e> ^ ')'
        <e> ::= <e> _ <ar> <t>                                  <e> ::= <e> ^ <ar> <t>
        <ar> ::= _ '+'                                          <ar> ::= ^ '+'
        <ar> ::= _ '-'                                          <ar> ::= ^ '-'
        <ar> ::= _ or                                           <ar> ::= ^ or

        '-' s 40
        ')' s 65
        '+' s 42
        or s 46
        <ar> g 47


State 40
        Prior States: 23, 30, 35, 39, 58, 66, 67, 68, 69

        <ar> ::= '-' _                                          <ar> ::= '-' ^

        '(' r 2
        Identifier r 2
        num r 2


State 41
        Prior States: 23, 30, 35, 58

        <opl> ::= <e> '!=' _ <e>                                <opl> ::= <e> '!=' ^ <e>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 66
        <f> g 24
        <id> g 25
        <t> g 27


State 42
        Prior States: 23, 30, 35, 39, 58, 66, 67, 68, 69

        <ar> ::= '+' _                                          <ar> ::= '+' ^

        '(' r 1
        Identifier r 1
        num r 1


State 43
        Prior States: 23, 30, 35, 58

        <opl> ::= <e> '<' _ <e>                                 <opl> ::= <e> '<' ^ <e>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 67
        <f> g 24
        <id> g 25
        <t> g 27


State 44
        Prior States: 23, 30, 35, 58

        <opl> ::= <e> '==' _ <e>                                <opl> ::= <e> '==' ^ <e>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 68
        <f> g 24
        <id> g 25
        <t> g 27


State 45
        Prior States: 23, 30, 35, 58

        <opl> ::= <e> '>' _ <e>                                 <opl> ::= <e> '>' ^ <e>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 69
        <f> g 24
        <id> g 25
        <t> g 27


State 46
        Prior States: 23, 30, 35, 39, 58, 66, 67, 68, 69

        <ar> ::= or _                                           <ar> ::= or ^

        '(' r 3
        Identifier r 3
        num r 3


State 47
        Prior States: 23, 30, 35, 39, 58, 66, 67, 68, 69

        <e> ::= <e> <ar> _ <t>                                  <e> ::= <e> <ar> ^ <t>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num

        '(' s 21
        Identifier s 4
        num s 22
        <f> g 24
        <id> g 25
        <t> g 70


State 48
        Prior States: 26

        <cond> ::= if <opl> <stm> _ else <stm>                  <cond> ::= if <opl> <stm> ^ else <stm>

        else s 71


State 49
        Prior States: 27, 70

        <ap> ::= '%' _                                          <ap> ::= '%' ^

        '(' r 6
        Identifier r 6
        num r 6


State 50
        Prior States: 27, 70

        <ap> ::= '*' _                                          <ap> ::= '*' ^

        '(' r 4
        Identifier r 4
        num r 4


State 51
        Prior States: 27, 70

        <ap> ::= '/' _                                          <ap> ::= '/' ^

        '(' r 5
        Identifier r 5
        num r 5


State 52
        Prior States: 27, 70

        <ap> ::= and _                                          <ap> ::= and ^

        '(' r 7
        Identifier r 7
        num r 7


State 53
        Prior States: 27, 70

        <t> ::= <t> <ap> _ <f>                                  <t> ::= <t> <ap> ^ <f>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num

        '(' s 21
        Identifier s 4
        num s 22
        <f> g 72
        <id> g 25


State 54
        Prior States: 28

        <loop> ::= loop '(' <opl> _ ')' <stm>                   <loop> ::= loop '(' <opl> ^ ')' <stm>

        ')' s 73


State 55
        Prior States: 29

        <loop> ::= loop <stm> '(' _ <opl> ')'                   <loop> ::= loop <stm> '(' ^ <opl> ')'
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <e> ::= _ <e> <ar> <t>                                  <e> ::= ^ <e> <ar> <t>
        <e> ::= _ <t>                                           <e> ::= ^ <t>
        <t> ::= _ <t> <ap> <f>                                  <t> ::= ^ <t> <ap> <f>
        <t> ::= _ <f>                                           <t> ::= ^ <f>
        <f> ::= _ '(' <e> ')'                                   <f> ::= ^ '(' <e> ')'
        <f> ::= _ <id>                                          <f> ::= ^ <id>
        <f> ::= _ num                                           <f> ::= ^ num
        <opl> ::= _ <e> '!=' <e>                                <opl> ::= ^ <e> '!=' <e>
        <opl> ::= _ <e> '==' <e>                                <opl> ::= ^ <e> '==' <e>
        <opl> ::= _ <e> '<' <e>                                 <opl> ::= ^ <e> '<' <e>
        <opl> ::= _ <e> '>' <e>                                 <opl> ::= ^ <e> '>' <e>

        '(' s 21
        Identifier s 4
        num s 22
        <e> g 23
        <f> g 24
        <id> g 25
        <opl> g 74
        <t> g 27


State 56
        Prior States: 30

        <stm> ::= return <e> ';' _                              <stm> ::= return <e> ';' ^

        (EOF) r 34
        '' r 34
        '(' r 34
        '{' r 34
        '}' r 34
        else r 34
        function r 34
        Identifier r 34
        if r 34
        loop r 34
        return r 34


State 57
        Prior States: 31

        <stm> ::= return <opl> ';' _                            <stm> ::= return <opl> ';' ^

        (EOF) r 33
        '' r 33
        '(' r 33
        '{' r 33
        '}' r 33
        else r 33
        function r 33
        Identifier r 33
        if r 33
        loop r 33
        return r 33


State 58
        Prior States: 33

        <attr> ::= <id> '=' <e> _                               <attr> ::= <id> '=' <e> ^
        <e> ::= <e> _ <ar> <t>                                  <e> ::= <e> ^ <ar> <t>
        <opl> ::= <e> _ '!=' <e>                                <opl> ::= <e> ^ '!=' <e>
        <opl> ::= <e> _ '==' <e>                                <opl> ::= <e> ^ '==' <e>
        <opl> ::= <e> _ '<' <e>                                 <opl> ::= <e> ^ '<' <e>
        <opl> ::= <e> _ '>' <e>                                 <opl> ::= <e> ^ '>' <e>
        <ar> ::= _ '+'                                          <ar> ::= ^ '+'
        <ar> ::= _ '-'                                          <ar> ::= ^ '-'
        <ar> ::= _ or                                           <ar> ::= ^ or

        '-' s 40
        '!=' s 41
        '+' s 42
        '<' s 43
        '==' s 44
        '>' s 45
        or s 46
        <ar> g 47
        ';' r 20


State 59
        Prior States: 33

        <attr> ::= <id> '=' <opl> _                             <attr> ::= <id> '=' <opl> ^

        ';' r 21


State 60
        Prior States: 35

        <stm_> ::= return <e> ';' _ '}'                         <stm_> ::= return <e> ';' ^ '}'

        '}' s 75


State 61
        Prior States: 36

        <stm_> ::= return <opl> ';' _ '}'                       <stm_> ::= return <opl> ';' ^ '}'

        '}' s 76


State 62
        Prior States: 38, 78

        <param> ::= ')' _                                       <param> ::= ')' ^

        '{' r 41
        function r 41
        Identifier r 41
        if r 41
        loop r 41
        return r 41


State 63
        Prior States: 38, 78

        <param> ::= <id> _ ')'                                  <param> ::= <id> ^ ')'
        <param> ::= <id> _ ',' <param>                          <param> ::= <id> ^ ',' <param>

        ')' s 77
        ',' s 78


State 64
        Prior States: 38

        <function> ::= function <id> '(' <param> _ <stm>        <function> ::= function <id> '(' <param> ^ <stm>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <cond> ::= _ if <opl> <stm> else <stm>                  <cond> ::= ^ if <opl> <stm> else <stm>
        <attr> ::= _ <id> '=' <e>                               <attr> ::= ^ <id> '=' <e>
        <attr> ::= _ <id> '=' <opl>                             <attr> ::= ^ <id> '=' <opl>
        <loop> ::= _ loop '(' <opl> ')' <stm>                   <loop> ::= ^ loop '(' <opl> ')' <stm>
        <loop> ::= _ loop <stm> '(' <opl> ')'                   <loop> ::= ^ loop <stm> '(' <opl> ')'
        <com> ::= _ <loop>                                      <com> ::= ^ <loop>
        <com> ::= _ <cond>                                      <com> ::= ^ <cond>
        <com> ::= _ <attr> ';'                                  <com> ::= ^ <attr> ';'
        <com> ::= _ <function>                                  <com> ::= ^ <function>
        <stm> ::= _ '{' <stm_>                                  <stm> ::= ^ '{' <stm_>
        <stm> ::= _ <com>                                       <stm> ::= ^ <com>
        <stm> ::= _ return <opl> ';'                            <stm> ::= ^ return <opl> ';'
        <stm> ::= _ return <e> ';'                              <stm> ::= ^ return <e> ';'
        <function> ::= _ function <id> '(' <param> <stm>        <function> ::= ^ function <id> '(' <param> <stm>

        '{' s 2
        function s 3
        Identifier s 4
        if s 5
        loop s 6
        return s 7
        <attr> g 8
        <com> g 9
        <cond> g 10
        <function> g 11
        <id> g 12
        <loop> g 14
        <stm> g 79


State 65
        Prior States: 39

        <f> ::= '(' <e> ')' _                                   <f> ::= '(' <e> ')' ^

        '-' r 12
        '!=' r 12
        '%' r 12
        ')' r 12
        '*' r 12
        '/' r 12
        ';' r 12
        '{' r 12
        '+' r 12
        '<' r 12
        '==' r 12
        '>' r 12
        and r 12
        function r 12
        Identifier r 12
        if r 12
        loop r 12
        or r 12
        return r 12


State 66
        Prior States: 41

        <opl> ::= <e> '!=' <e> _                                <opl> ::= <e> '!=' <e> ^
        <e> ::= <e> _ <ar> <t>                                  <e> ::= <e> ^ <ar> <t>
        <ar> ::= _ '+'                                          <ar> ::= ^ '+'
        <ar> ::= _ '-'                                          <ar> ::= ^ '-'
        <ar> ::= _ or                                           <ar> ::= ^ or

        '-' s 40
        '+' s 42
        or s 46
        <ar> g 47
        ')' r 15
        ';' r 15
        '{' r 15
        function r 15
        Identifier r 15
        if r 15
        loop r 15
        return r 15


State 67
        Prior States: 43

        <opl> ::= <e> '<' <e> _                                 <opl> ::= <e> '<' <e> ^
        <e> ::= <e> _ <ar> <t>                                  <e> ::= <e> ^ <ar> <t>
        <ar> ::= _ '+'                                          <ar> ::= ^ '+'
        <ar> ::= _ '-'                                          <ar> ::= ^ '-'
        <ar> ::= _ or                                           <ar> ::= ^ or

        '-' s 40
        '+' s 42
        or s 46
        <ar> g 47
        ')' r 17
        ';' r 17
        '{' r 17
        function r 17
        Identifier r 17
        if r 17
        loop r 17
        return r 17


State 68
        Prior States: 44

        <opl> ::= <e> '==' <e> _                                <opl> ::= <e> '==' <e> ^
        <e> ::= <e> _ <ar> <t>                                  <e> ::= <e> ^ <ar> <t>
        <ar> ::= _ '+'                                          <ar> ::= ^ '+'
        <ar> ::= _ '-'                                          <ar> ::= ^ '-'
        <ar> ::= _ or                                           <ar> ::= ^ or

        '-' s 40
        '+' s 42
        or s 46
        <ar> g 47
        ')' r 16
        ';' r 16
        '{' r 16
        function r 16
        Identifier r 16
        if r 16
        loop r 16
        return r 16


State 69
        Prior States: 45

        <opl> ::= <e> '>' <e> _                                 <opl> ::= <e> '>' <e> ^
        <e> ::= <e> _ <ar> <t>                                  <e> ::= <e> ^ <ar> <t>
        <ar> ::= _ '+'                                          <ar> ::= ^ '+'
        <ar> ::= _ '-'                                          <ar> ::= ^ '-'
        <ar> ::= _ or                                           <ar> ::= ^ or

        '-' s 40
        '+' s 42
        or s 46
        <ar> g 47
        ')' r 18
        ';' r 18
        '{' r 18
        function r 18
        Identifier r 18
        if r 18
        loop r 18
        return r 18


State 70
        Prior States: 47

        <e> ::= <e> <ar> <t> _                                  <e> ::= <e> <ar> <t> ^
        <t> ::= <t> _ <ap> <f>                                  <t> ::= <t> ^ <ap> <f>
        <ap> ::= _ '*'                                          <ap> ::= ^ '*'
        <ap> ::= _ '/'                                          <ap> ::= ^ '/'
        <ap> ::= _ '%'                                          <ap> ::= ^ '%'
        <ap> ::= _ and                                          <ap> ::= ^ and

        '%' s 49
        '*' s 50
        '/' s 51
        and s 52
        <ap> g 53
        '-' r 8
        '!=' r 8
        ')' r 8
        ';' r 8
        '{' r 8
        '+' r 8
        '<' r 8
        '==' r 8
        '>' r 8
        function r 8
        Identifier r 8
        if r 8
        loop r 8
        or r 8
        return r 8


State 71
        Prior States: 48

        <cond> ::= if <opl> <stm> else _ <stm>                  <cond> ::= if <opl> <stm> else ^ <stm>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <cond> ::= _ if <opl> <stm> else <stm>                  <cond> ::= ^ if <opl> <stm> else <stm>
        <attr> ::= _ <id> '=' <e>                               <attr> ::= ^ <id> '=' <e>
        <attr> ::= _ <id> '=' <opl>                             <attr> ::= ^ <id> '=' <opl>
        <loop> ::= _ loop '(' <opl> ')' <stm>                   <loop> ::= ^ loop '(' <opl> ')' <stm>
        <loop> ::= _ loop <stm> '(' <opl> ')'                   <loop> ::= ^ loop <stm> '(' <opl> ')'
        <com> ::= _ <loop>                                      <com> ::= ^ <loop>
        <com> ::= _ <cond>                                      <com> ::= ^ <cond>
        <com> ::= _ <attr> ';'                                  <com> ::= ^ <attr> ';'
        <com> ::= _ <function>                                  <com> ::= ^ <function>
        <stm> ::= _ '{' <stm_>                                  <stm> ::= ^ '{' <stm_>
        <stm> ::= _ <com>                                       <stm> ::= ^ <com>
        <stm> ::= _ return <opl> ';'                            <stm> ::= ^ return <opl> ';'
        <stm> ::= _ return <e> ';'                              <stm> ::= ^ return <e> ';'
        <function> ::= _ function <id> '(' <param> <stm>        <function> ::= ^ function <id> '(' <param> <stm>

        '{' s 2
        function s 3
        Identifier s 4
        if s 5
        loop s 6
        return s 7
        <attr> g 8
        <com> g 9
        <cond> g 10
        <function> g 11
        <id> g 12
        <loop> g 14
        <stm> g 80


State 72
        Prior States: 53

        <t> ::= <t> <ap> <f> _                                  <t> ::= <t> <ap> <f> ^

        '-' r 10
        '!=' r 10
        '%' r 10
        ')' r 10
        '*' r 10
        '/' r 10
        ';' r 10
        '{' r 10
        '+' r 10
        '<' r 10
        '==' r 10
        '>' r 10
        and r 10
        function r 10
        Identifier r 10
        if r 10
        loop r 10
        or r 10
        return r 10


State 73
        Prior States: 54

        <loop> ::= loop '(' <opl> ')' _ <stm>                   <loop> ::= loop '(' <opl> ')' ^ <stm>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <cond> ::= _ if <opl> <stm> else <stm>                  <cond> ::= ^ if <opl> <stm> else <stm>
        <attr> ::= _ <id> '=' <e>                               <attr> ::= ^ <id> '=' <e>
        <attr> ::= _ <id> '=' <opl>                             <attr> ::= ^ <id> '=' <opl>
        <loop> ::= _ loop '(' <opl> ')' <stm>                   <loop> ::= ^ loop '(' <opl> ')' <stm>
        <loop> ::= _ loop <stm> '(' <opl> ')'                   <loop> ::= ^ loop <stm> '(' <opl> ')'
        <com> ::= _ <loop>                                      <com> ::= ^ <loop>
        <com> ::= _ <cond>                                      <com> ::= ^ <cond>
        <com> ::= _ <attr> ';'                                  <com> ::= ^ <attr> ';'
        <com> ::= _ <function>                                  <com> ::= ^ <function>
        <stm> ::= _ '{' <stm_>                                  <stm> ::= ^ '{' <stm_>
        <stm> ::= _ <com>                                       <stm> ::= ^ <com>
        <stm> ::= _ return <opl> ';'                            <stm> ::= ^ return <opl> ';'
        <stm> ::= _ return <e> ';'                              <stm> ::= ^ return <e> ';'
        <function> ::= _ function <id> '(' <param> <stm>        <function> ::= ^ function <id> '(' <param> <stm>

        '{' s 2
        function s 3
        Identifier s 4
        if s 5
        loop s 6
        return s 7
        <attr> g 8
        <com> g 9
        <cond> g 10
        <function> g 11
        <id> g 12
        <loop> g 14
        <stm> g 81


State 74
        Prior States: 55

        <loop> ::= loop <stm> '(' <opl> _ ')'                   <loop> ::= loop <stm> '(' <opl> ^ ')'

        ')' s 82


State 75
        Prior States: 60

        <stm_> ::= return <e> ';' '}' _                         <stm_> ::= return <e> ';' '}' ^

        (EOF) r 38
        '' r 38
        '(' r 38
        '{' r 38
        '}' r 38
        else r 38
        function r 38
        Identifier r 38
        if r 38
        loop r 38
        return r 38


State 76
        Prior States: 61

        <stm_> ::= return <opl> ';' '}' _                       <stm_> ::= return <opl> ';' '}' ^

        (EOF) r 37
        '' r 37
        '(' r 37
        '{' r 37
        '}' r 37
        else r 37
        function r 37
        Identifier r 37
        if r 37
        loop r 37
        return r 37


State 77
        Prior States: 63

        <param> ::= <id> ')' _                                  <param> ::= <id> ')' ^

        '{' r 40
        function r 40
        Identifier r 40
        if r 40
        loop r 40
        return r 40


State 78
        Prior States: 63

        <param> ::= <id> ',' _ <param>                          <param> ::= <id> ',' ^ <param>
        <id> ::= _ Identifier                                   <id> ::= ^ Identifier
        <param> ::= _ <id> ')'                                  <param> ::= ^ <id> ')'
        <param> ::= _ ')'                                       <param> ::= ^ ')'
        <param> ::= _ <id> ',' <param>                          <param> ::= ^ <id> ',' <param>

        ')' s 62
        Identifier s 4
        <id> g 63
        <param> g 83


State 79
        Prior States: 64

        <function> ::= function <id> '(' <param> <stm> _        <function> ::= function <id> '(' <param> <stm> ^

        (EOF) r 39
        '' r 39
        '(' r 39
        '{' r 39
        '}' r 39
        else r 39
        function r 39
        Identifier r 39
        if r 39
        loop r 39
        return r 39


State 80
        Prior States: 71

        <cond> ::= if <opl> <stm> else <stm> _                  <cond> ::= if <opl> <stm> else <stm> ^

        (EOF) r 19
        '' r 19
        '(' r 19
        '{' r 19
        '}' r 19
        else r 19
        function r 19
        Identifier r 19
        if r 19
        loop r 19
        return r 19


State 81
        Prior States: 73

        <loop> ::= loop '(' <opl> ')' <stm> _                   <loop> ::= loop '(' <opl> ')' <stm> ^

        (EOF) r 22
        '' r 22
        '(' r 22
        '{' r 22
        '}' r 22
        else r 22
        function r 22
        Identifier r 22
        if r 22
        loop r 22
        return r 22


State 82
        Prior States: 74

        <loop> ::= loop <stm> '(' <opl> ')' _                   <loop> ::= loop <stm> '(' <opl> ')' ^

        (EOF) r 23
        '' r 23
        '(' r 23
        '{' r 23
        '}' r 23
        else r 23
        function r 23
        Identifier r 23
        if r 23
        loop r 23
        return r 23


State 83
        Prior States: 78

        <param> ::= <id> ',' <param> _                          <param> ::= <id> ',' <param> ^

        '{' r 42
        function r 42
        Identifier r 42
        if r 42
        loop r 42
        return r 42




========================================
System Log
========================================

Grammar        Success           The grammar was successfully analyzed
LALR States    Success           LALR Table was succesfully created
DFA States     Success           The DFA State Table was successfully created
System         Success           The grammar was successfully analyzed and tables were created.


